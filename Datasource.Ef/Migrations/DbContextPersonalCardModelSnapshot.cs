// <auto-generated />
using System;
using Datasource.Ef.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Database.Migrations
{
    [DbContext(typeof(DbContextPersonalCard))]
    partial class DbContextPersonalCardModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Database.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Genders", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Man"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Woman"
                        });
                });

            modelBuilder.Entity("Database.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Birth")
                        .HasColumnType("date");

                    b.Property<DateTime?>("Death")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("Persons", "dbo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Birth = new DateTime(1596, 12, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Death = new DateTime(1645, 7, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Михаил",
                            GenderId = 1,
                            LastName = "Романов",
                            MiddleName = "Федорович"
                        },
                        new
                        {
                            Id = 2,
                            Birth = new DateTime(1629, 3, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Death = new DateTime(1676, 2, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Алексей",
                            GenderId = 1,
                            LastName = "Романов",
                            MiddleName = "Михайлович"
                        });
                });

            modelBuilder.Entity("Database.Models.Person", b =>
                {
                    b.HasOne("Database.Models.Gender", "Gender")
                        .WithMany("Persons")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("Database.Models.Gender", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
